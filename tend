#!/usr/bin/bash
#allow the overwrite of the database and the command
if [ -z "$TENDPSQL" ]; then
    TENDPSQL="psql -d tend -P pager=off"
fi

#helpers for cleaner code

function get_id () {
    if [ "$#" -ge "2" ] && [ -n "$2" ] && [ -z "${2//[0-9]/}" ]; then
        eval $1=$2
    else
        while true
        do
            printf "enter id: "
            read -r id
            if [ -n "$id" ] && [ -z "${id//[0-9]/}" ]; then
                break
            fi
            echo "please enter integers only" 1>&2
        done
        eval $1=$id
    fi
}

tout="/proc/$$/fd/1"
function get_text () {
    if [ "$#" -ge "1" ]; then
        echo "$1"
    else
        while [ -z "$text" ]
        do
            printf "enter text: ">$tout
            read -r text
        done
        echo "${text//\'/\'\'}"
    fi
}

#no this isnt security yes i know you can do sql injections here (youre running this locally you have a damn shell)
#this this is because i dont want to have to sanitize it manually if i want to say shove json into the db
function get_stdin () {
    declare -r tmp=$(</dev/stdin)
    echo "${tmp//\'/\'\'}"
}

if [ "$#" -eq "0" ]; then
    echo "--tend--"
    echo "    tend command [arguments, ...]"
    echo "commands:"
    echo "    qs - quick stats"
    echo "    qs"
    echo "    fzf - fzf backed exploring"
    echo "    fzf"
    echo "  listing:"
    echo "    le - list entity"
    echo "    le [id]"
    echo "    lll - list long long"
    echo "    lll [id]"
    echo "    lel - list entity long"
    echo "    lel [id]"
    echo "    la - list all aliases for an entity"
    echo "    la [entity id]"
    echo "    lr - list relation"
    echo "    lr [id]"
    echo "    lrl - list relation long"
    echo "    lrl [id]"
    echo "    ls - list all snippets for an entity"
    echo "    ls [entity id]"
    echo "    lrs - list all relation snippets for a relation"
    echo "    lrs [id]"
    echo "  searching:"
    echo "    fa - find an entity by alias"
    echo "    fa [name]"
    echo "    fal - find an entity by alias long"
    echo "    fal [name]"
    echo "    fs - find a snippet by string"
    echo "    fs [string]"
    echo "    fr - find a relation by entity id"
    echo "    fr [entity id]"
    echo "    frl - find a relation by entity id long"
    echo "    frl [entity id]"
    echo "    frs - find a relation snippet by string"
    echo "    frs [string]"
    echo "  adding:"
    echo "    ae - add an entity"
    echo "    ae [name]"
    echo "    aa - add an alias to an entity"
    echo "    aa [id] [name]"
    echo "    ar - add a relation between two entities"
    echo "    ar [id_a] [id_b]"
    echo "    ars - add a snippet to a relation"
    echo "    ars [id]"
    echo "    as - add snippet to an entity"
    echo "    as [id]"
    echo "  editing:"
    echo "    ea - edit an entity"
    echo "    ea [id]"
    echo "    es - edit a snippet"
    echo "    es [id]"
    echo "    ers - edit a relation snippet"
    echo "    ers [id]"
    echo "  deleting:"
    echo "    de - delete an entity"
    echo "    de [id]"
    echo "    da - delete an alias"
    echo "    da [id]"
    echo "    dr - delete a relation"
    echo "    dr [id]"
    echo "    ds - delete a snippet"
    echo "    ds [id]"
    echo "    drs - delete a relation snippet"
    echo "    drs [id]"
else
    COM=$1
    shift 1
    case $COM in
        "qs")
            $TENDPSQL -c "select count(*), 'entities' as type from entity
                            union
                        select count(*) as total, 'aliases' from alias
                            union
                        select count(*) as total, 'relations' from relation
                            union
                        select count(*), 'snippets' from snippet
                            union
                        select count(*), 'relation snippets' from relation_snippet
                        order by 2;"
            ;;
        "fzf")
            MAIN_SQL="select id,
                                (select string_agg(name, ', ' order by name) from alias where entity_id = entity.id limit 4) as alias_list,
                                (select count(*) from alias where entity_id = entity.id) as aliases,
                                (select count(*) from snippet where entity_id = entity.id) as snippets,
                                created
                            from entity
                            order by 1;"

            PREVIEW_SQL="select id as id, name as data, updated as last_modified from alias where entity_id = \$N
                            union all
                        select id, data, updated from snippet where entity_id = \$N
                            union all
                        select id, data, updated from relation_snippet where id in (select id from relation where entity_id_a = \$N or entity_id_b = \$N)
                            order by 1;"

            PREVIEW="N=\"{1}\" && N=\${N//[^0-9]/} && [ -n \"\$N\" ] && [ \"\$N\" -eq \"\$N\" ] 2>/dev/null && $TENDPSQL -c \"$PREVIEW_SQL\""

            SELECTED=$(FZF_DEFAULT_COMMAND="$TENDPSQL -c \"$MAIN_SQL\"" fzf\
                --preview "$PREVIEW" --preview-window "down:50%" --header-lines=2 --no-bold +m --black --tabstop=4 --cycle\
                --color="dark,fg:#b5d0db,fg:#b6d0db,fg+:#c250e5,bg+:#282c34,hl:#ff4c4c,hl+:#ff4c4c,info:#b6d0db,pointer:#b6d9db,border:#b6d9db,header:#b6d0db")
            N=${SELECTED//[^0-9 ]*/ }
            [ -n "$N" ] && [ "$N" -eq "$N" ] 2>/dev/null && tend lll $N
            ;;
        "lll")
            echo "--list long long--"
            get_id entity_id "$@"
            $TENDPSQL -c "select id as id, 'e' as type, id::text as data, created as last_modified from entity where id = ${entity_id}
                            union all
                        select id, 'a', name, updated from alias where entity_id = ${entity_id}
                            union all
                        select id, 's', data, updated from snippet where entity_id = ${entity_id}
                            union all
                        select id, 'r', concat('a:', entity_id_a, ' b:',entity_id_b), updated from relation where entity_id_a = ${entity_id} or entity_id_b = ${entity_id}
                            union all
                        select id, 'rs', data, updated from relation_snippet where id in (select id from relation where entity_id_a = ${entity_id} or entity_id_b = ${entity_id}) order by 2, 1;"
            ;;
        "le")
            echo "--list entity--"
            if [ "$#" -eq "2" ]; then
                get_id id "$@"
                $TENDPSQL -c "select * from entity where id = ${2};"
            else
                $TENDPSQL -c "select * from entity;"
            fi
            ;;
        "lel")
            echo "--list entity long--"
            if [ "$#" -eq "2" ]; then
                get_id id "$@"
                $TENDPSQL -c "select id,
                                (select substring(string_agg(name, ', ' order by name) from 0 for 40) from alias where entity_id = entity.id limit 4) as alias_list,
                                (select count(*) from alias where entity_id = entity.id) as aliases,
                                (select count(*) from snippet where entity_id = entity.id) as snippets,
                                created
                            from entity
                            where id = ${id}
                            order by 1;"
            else
                $TENDPSQL -c "select id,
                                (select substring(string_agg(name, ', ' order by name) from 0 for 40) from alias where entity_id = entity.id limit 4) as alias_list,
                                (select count(*) from alias where entity_id = entity.id) as aliases,
                                (select count(*) from snippet where entity_id = entity.id) as snippets,
                                created
                            from entity
                            order by 1;"
            fi
            ;;
        "la")
            echo "--list all aliases--"
            get_id entity_id "$@"
            $TENDPSQL -c "select name,
                            id,
                            updated
                        from alias
                        where entity_id = ${entity_id};"
            ;;
        "ls")
            echo "--list all snippets--"
            get_id entity_id "$@"
            $TENDPSQL -c "select data as snippet,
                            id,
                            updated
                        from snippet
                        where entity_id = ${entity_id};"
            ;;
        "lrs")
            echo "--list all relation snippets--"
            get_id relation_id "$@"
            $TENDPSQL -c "select data as snippet,
                            id,
                            updated
                        from relation_snippet
                        where relation_id = ${relation_id};"
            ;;
        "lr")
            echo "--list relation--"
            get_id id "$@"
            $TENDPSQL -c "select id,
                            entity_id_a,
                            entity_id_b,
                            updated
                        from relation
                        where id = ${id};"
            ;;
        "lrl")
            echo "--list relation long--"
            get_id id "$@"
            $TENDPSQL -c "select id,
                            entity_id_a,
                                (select string_agg(name, ', ' order by name) from alias where entity_id = entity_id_a limit 4) as alias_list_a,
                            entity_id_b,
                                (select string_agg(name, ', ' order by name) from alias where entity_id = entity_id_b limit 4) as alias_list_b,
                            updated
                        from relation
                        where id = ${id}"
            ;;
        "fa")
            echo "--find entity--"
            name=$(get_text "$@")
            $TENDPSQL -c "select name,
                            id,
                            entity_id,
                            updated
                        from alias
                        where name like '%${name}%'
                        order by name;"
            ;;
        "fal")
            echo "--find entity--"
            name=$(get_text "$@")
            $TENDPSQL -c "select a.name,
                            a.id,
                            a.entity_id,
                            (
                                select string_agg(b.name, ', ' order by b.name)
                                from alias b
                                where a.entity_id = b.entity_id
                                    and a.id != b.id
                            ) as other_aliases,
                            a.updated
                        from alias a
                        where a.name like '%${name}%'
                        order by a.name;"
            ;;
        "fr")
            echo "--find relation--"
            get_id entity_id "$@"
            $TENDPSQL -c "select id,
                            entity_id_a,
                            entity_id_b,
                            updated
                        from relation
                        where (entity_id_a = ${entity_id}
                            or entity_id_b = ${entity_id});"
            ;;
        "frl")
            echo "--find relation--"
            get_id entity_id "$@"
            $TENDPSQL -c "select id,
                            entity_id_a,
                                (select string_agg(name, ', ' order by name) from alias where entity_id = entity_id_a limit 4) as alias_list_a,
                            entity_id_b,
                                (select string_agg(name, ', ' order by name) from alias where entity_id = entity_id_b limit 4) as alias_list_b,
                            updated
                        from relation
                        where (entity_id_a = ${entity_id}
                        or entity_id_b = ${entity_id});"
            ;;
        "fs")
            echo "--find snippet--"
            string=$(get_text "$@")
            $TENDPSQL -c "select data as snippet,
                            id,
                            entity_id,
                            updated
                        from snippet
                        where data like '%${string}%';"
            ;;
        "frs")
            echo "--find relation snippet--"
            string=$(get_text "$@")
            $TENDPSQL -c "select data as snippet,
                            id,
                            relation_id,
                            updated
                        from relation_snippet
                        where data like '%${string}%';"
            ;;
        "ae")
            echo "--add entity and alias--"
            name=$(get_text "$@")
            $TENDPSQL -c "insert into entity default values;
                            insert into alias (name) values ('${name}');
                            select currval('entity_id_seq');"
            ;;
        "aa")
            echo "--add alias--"
            get_id id "$@"
            shift 1
            name=$(get_text "$@")
            $TENDPSQL -c "insert into alias (name, entity_id) values ('${name}', ${id}) returning id;"
            ;;
        "ar")
            echo "--add relation--"
            get_id ida "$@"
            shift 1
            get_id idb "$@"
            $TENDPSQL -c "insert into relation (entity_id_a, entity_id_b) values ('${ida}', ${idb}) returning id;"
            ;;
        "as")
            echo "--add snippet--"
            get_id id "$@"
            data=$(get_stdin)
            $TENDPSQL -c "insert into snippet (data,entity_id) values ('${data}', ${id}) returning id;"
            ;;
        "ars")
            echo "--add relation snippet--"
            get_id id "$@"
            data=$(get_stdin)
            $TENDPSQL -c "insert into relation_snippet (data, relation_id) values ('${data}', ${id}) returning id;"
            ;;
        "ea")
            echo "--edit alias--"
            get_id id "$@"
            shift 1
            tmpfile=$(mktemp "/tmp/XXXX_id_$id")
            $TENDPSQL -tAqc "select name
                        from alias
                        where id = ${id};" > $tmpfile
            $EDITOR $tmpfile
            data=$(<$tmpfile)
            rm $tmpfile
            if [ -n "$data" ]; then
                $TENDPSQL -c "update alias set name = '${data//\'/\'\'}' where id = ${id};"
            else
                echo "cannot update, data blank" 1>&2
            fi
            ;;
        "es")
            echo "--edit snippet--"
            get_id id "$@"
            tmpfile=$(mktemp "/tmp/XXXX_id_$id")
            $TENDPSQL -tAqc "select data
                        from snippet
                        where id = ${id};" > $tmpfile
            $EDITOR $tmpfile
            data=$(<$tmpfile)
            rm $tmpfile
            if [ -n "$data" ]; then
                $TENDPSQL -c "update snippet set data = '${data//\'/\'\'}' where id = ${id};"
            else
                echo "cannot update, data blank" 1>&2
            fi
            ;;
        "ers")
            echo "--edit relation snippet--"
            get_id id "$@"
            tmpfile=$(mktemp "/tmp/XXXX_id_$id")
            $TENDPSQL -tAqc "select data
                        from relation_snippet
                        where id = ${id};" > $tmpfile
            $EDITOR $tmpfile
            data=$(<$tmpfile)
            rm $tmpfile
            if [ -n "$data" ]; then
                $TENDPSQL -c "update relation_snippet set data = '${data//\'/\'\'}' where id = ${id};"
            else
                echo "cannot update, data blank" 1>&2
            fi
            ;;
        "de")
            echo "--delete entity--"
            get_id id "$@"
            $TENDPSQL -c "delete from entity where id = ${id};"
            ;;
        "da")
            echo "--delete alias--"
            get_id id "$@"
            $TENDPSQL -c "delete from alias where id = ${id};"
            ;;
        "ds")
            echo "--delete snippet--"
            get_id id "$@"
            $TENDPSQL -c "delete from snippet where id = ${id};"
            ;;
        "dr")
            echo "--delete relation--"
            get_id id "$@"
            $TENDPSQL -c "delete from relation where id = ${id};"
            ;;
        "drs")
            echo "--delete relation snippet--"
            get_id id "$@"
            $TENDPSQL -c "delete from relation_snippet where id = ${id};"
            ;;
        *)
            echo "unknown option $COM"
            $0
            ;;
    esac
fi
